<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe AI</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        #game {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #fff;
            border: 2px solid #000;
            font-size: 36px;
            cursor: pointer;
        }
        .cell.disabled {
            pointer-events: none;
        }
        #message {
            margin-top: 20px;
            font-size: 24px;
        }
    </style>
</head>
<body>
    <div id="game">
        <div class="cell" data-index="0"></div>
        <div class="cell" data-index="1"></div>
        <div class="cell" data-index="2"></div>
        <div class="cell" data-index="3"></div>
        <div class="cell" data-index="4"></div>
        <div class="cell" data-index="5"></div>
        <div class="cell" data-index="6"></div>
        <div class="cell" data-index="7"></div>
        <div class="cell" data-index="8"></div>
    </div>
    <div id="message"></div>

    <script>
        const cells = document.querySelectorAll('.cell');
        const messageElement = document.getElementById('message');
        let board = ['', '', '', '', '', '', '', '', ''];
        const human = 'O';
        const ai = 'X';

        const winningCombinations = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        function checkWin(board, player) {
            return winningCombinations.some(combination => {
                return combination.every(index => board[index] === player);
            });
        }

        function isBoardFull(board) {
            return board.every(cell => cell !== '');
        }

        function minimax(board, depth, isMaximizing) {
            if (checkWin(board, ai)) return 10 - depth;
            if (checkWin(board, human)) return depth - 10;
            if (isBoardFull(board)) return 0;

            if (isMaximizing) {
                let bestScore = -Infinity;
                for (let i = 0; i < board.length; i++) {
                    if (board[i] === '') {
                        board[i] = ai;
                        let score = minimax(board, depth + 1, false);
                        board[i] = '';
                        bestScore = Math.max(score, bestScore);
                    }
                }
                return bestScore;
            } else {
                let bestScore = Infinity;
                for (let i = 0; i < board.length; i++) {
                    if (board[i] === '') {
                        board[i] = human;
                        let score = minimax(board, depth + 1, true);
                        board[i] = '';
                        bestScore = Math.min(score, bestScore);
                    }
                }
                return bestScore;
            }
        }

        function bestMove() {
            let bestScore = -Infinity;
            let move;
            for (let i = 0; i < board.length; i++) {
                if (board[i] === '') {
                    board[i] = ai;
                    let score = minimax(board, 0, false);
                    board[i] = '';
                    if (score > bestScore) {
                        bestScore = score;
                        move = i;
                    }
                }
            }
            return move;
        }

        function handleClick(event) {
            const index = event.target.dataset.index;
            if (board[index] !== '') return;

            board[index] = human;
            event.target.textContent = human;

            if (checkWin(board, human)) {
                messageElement.textContent = 'You win!';
                disableBoard();
                return;
            }

            if (isBoardFull(board)) {
                messageElement.textContent = 'Draw!';
                return;
            }

            const aiMove = bestMove();
            board[aiMove] = ai;
            cells[aiMove].textContent = ai;

            if (checkWin(board, ai)) {
                messageElement.textContent = 'AI wins!';
                disableBoard();
                return;
            }

            if (isBoardFull(board)) {
                messageElement.textContent = 'Draw!';
            }
        }

        function disableBoard() {
            cells.forEach(cell => {
                cell.classList.add('disabled');
            });
        }

        cells.forEach(cell => {
            cell.addEventListener('click', handleClick);
        });
    </script>
</body>
</html>
